package org.mephi;

import lombok.Data;
import lombok.Getter;
import lombok.Setter;

import java.util.Date;
import java.util.Objects;

/**
 * Класс транзакций представляет собой финансовую транзакцию, которая может быть доходом или расходом.
 * В нем отображаются такие сведения, как тип транзакции, сумма, категория, дата и необязательное описание.
 */
@Getter
@Setter
@Data
public class Transaction {
    /**
     * Определяет тип транзакции для данного объекта транзакции.
     * Тип транзакции может быть представлен в виде дохода (INCOME) или расхода (EXPENSE),
     * что позволяет классифицировать финансовые операции в системе.
     */
    private TransactionType type;
    /**
     * Определяет сумму, связанную с конкретной транзакцией.
     * Это значение представляет общий объём денежных средств, которые были потрачены или получены
     * в рамках данной финансовой операции. Сумма может быть положительной или отрицательной в зависимости
     * от типа транзакции (доход или расход).
     */
    private double amount;
    /**
     * Определяет категорию, связанную с конкретной транзакцией.
     * Категория используется для классификации финансовых операций, таких как покупка, аренда, зарплата и т. д.
     * Каждая категория может иметь тип (например, доход или расход), название, а также бюджет,
     * установленный для управления финансами в рамках данной категории.
     */
    private Category category;
    /**
     * Представляет дату, связанную с транзакцией.
     * Поле используется для указания времени выполнения финансовой операции
     * и может применяться для сортировки, фильтрации или анализа транзакций
     * за определённый период времени.
     */
    private Date date;
    /**
     * Представляет собой описание конкретной финансовой транзакции.
     * Поле используется для добавления дополнительной информации о транзакции,
     * такой как заметки, пояснения или другие сведения, которые могут уточнить цель
     * или подробности операции. Является необязательным и не влияет на основные данные транзакции.
     */
    private String description;

    public Transaction(double amount, Category category, String description) {
        this.amount = amount;
        this.category = category;
        this.description = description;

        if (Objects.isNull(date)) {
            this.date = new Date();
        }
    }

}
